import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;
//***********************************************************************
//Alan Decowski
//S.I.T. 2020F
//CPE-490 Final Project
//***********************************************************************
//Client.Java

//Client class for a server to communicate with clients.

public class Client 
{
	private PrintWriter out;
	private BufferedReader in;
	private Socket Sock;
	protected boolean ready = false;
	protected static out D = new out("ClientX");
	private internalThread iT;
	
	public Client(Socket s)
	{
		Sock = s;
		try
		{
			in = new BufferedReader(new InputStreamReader(s.getInputStream()));
			out = new PrintWriter(s.getOutputStream(), true);
			iT = new internalThread(in, this);
			ready = true;
		}
		catch(Exception c)
		{
			D.warn("An error occured that prevented a client for instatiating. Unable to process this thread.");
		}
	}
	
	public String getLine()
	{
		if (!ready)
		{
			D.warn("Attempted to read a line from a Client without having a \"Ready\" status");
			return null;
		}
		try {
			String j = in.readLine();
			return j;
		} catch (IOException e) {
			D.warn("An error occured trying to read a line.");
		}
		return null;
	}
	
	public boolean pushLine(String d)
	{
		if (!ready)
		{
			D.warn("Attempted to push a line to a Client without having a \"Ready\" status");
			return false;
		}
		try {
			out.write(d);
			out.flush();
			return true;
		}
		catch(Exception c)
		{
			D.warn("An error occured attempting to push a line to a client.");
		}
		
		return false;
	}
	
	private class internalThread extends Thread
	{
		private BufferedReader br;
		public boolean dataAvail;
		public String data;
		public Client parent = null;
		public internalThread(BufferedReader b, Client p)
		{
			dataAvail = false;
			br = b;
			data = null;
			parent = p;
		}
		
		public void run()
		{
			while(true)
			{
				try {
					data = br.readLine();
					dataAvail = true;
					while (dataAvail) yield();
					Client.D.info("A client put data on the line.");
					Client.D.info(data);
				} catch (IOException e) {
					Client.D.warn("internalThread: Unable to pull data off the line?");
				}
			}
		}
		
	}
	
}
