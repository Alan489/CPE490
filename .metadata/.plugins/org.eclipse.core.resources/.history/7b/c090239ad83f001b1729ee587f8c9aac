import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;


public class DataModel 
{
	private out D = new out("DataModel");
	private File t;
	public char[][] arr = new char[128][128];
	public boolean ready = false;
	private FileReader fr;
	
	public DataModel(File j)
	{
		D.info("DataModel loading...");
		t = j;
		boolean v = verify();
		if (!v)
		{
			D.warn("Directory is not setup for sharing... Initializing directory...");
			v = init();
			ready = v;
			return;
		}
		try {
			File temp = new File(t.getAbsolutePath()+"/BASE.anex");
			fr = new FileReader(temp);
			byte[] b = new byte[3];
			long counter = 0;
			long len = temp.length()/3;
			while (counter < len)
			{
				for (int i = 0; i < 3; i++)
				{
					b[i] = (byte) fr.read();
				}
			}
		} catch (Exception e) {
			D.warn("An unknown error occured.");
		}
		
	}
	
	private boolean verify()
	{
		boolean veri = true;
		veri = new File(t.getAbsolutePath()+"/BASE.anex").isFile() & veri;
		veri = new File(t.getAbsolutePath()+"/BASE.anex").length()%3 == 0 & veri;
		veri = new File(t.getAbsoluteFile()+"/BACK.anex").isFile() & veri;
		veri = new File(t.getAbsoluteFile()+"/TEMP.anex").isFile() & veri;
		return veri;
	}
	
	private boolean init()
	{
		boolean ini = true;
		
		try {
			ini = new File(t.getAbsoluteFile()+"/TEMP.anex").createNewFile() & ini;
			ini = new File(t.getAbsolutePath()+"/BASE.anex").createNewFile() & ini;
			ini = new File(t.getAbsoluteFile()+"/BACK.anex").createNewFile() & ini;
		} catch (IOException e) {
			D.warn("Unable to init files.");
			return false;
		}
		return ini;
	}
	
	public boolean update(char a, int r, int c)
	{
		if (r > arr.length || c > arr[0].length)
		{
			D.warn("Attempting to update outside of bounds. Req: [" + r + "][" + c + "]");
			return false;
		}
		
		arr[r][c] = a;
		
		return true;
	}
	
	//C:\Users\Alan489\Desktop\testing
}
